对于战斗中出现的各对象图层排序设计思路：

将这些对象大致分为两种：
一种是原生态Sprite为主的对象，主要用来显示角色、特效、光效等（之后暂称A类对象）；
另一种是战斗中角色身上冒出的数字、文字。这类对象（暂称B）用NGUI系统来制作和显示。

对于A类对象，用SpriteRender自带的SortingLayer来进行排序和管理；
而对于B类对象，由于在绝大多数情况下都是覆盖在A类对象之上的，不会出现交叉显示（一部分在A类对象下层，而另一部分在上层），因此不必考虑内部的排序问题。仅需处理好NGUI系统和MainCamera的渲染顺序即可。（depth only）

以下重点讨论A类对象的分层方案：
将战场场景由内到外分为：
bg层
背景夹层
角色层1
角色层2
角色层3
角色层4
角色层5
角色外层

定义各层作用：
－bg层：放置地图背景（background）
－背景夹层：处于角色和背景之间的层，用于放置mask（放某些大招时，可能屏幕变黑，遮住背景）
－角色层1：处于第一排的角色
－角色层2：处于第二排的角色，盖住第一排
－角色层3：同上类推
－角色层4：同上类推
－角色层5：同上类推
－角色外层：处于所有角色之上的层，用于播放一些全屏光效


对于技能等光效，在制作时需定义其预设的图层，一般分为以下两类
1.处于角色层；
2.处于所有角色层之上（即角色外层）

若是情况1，则在创建时自动为其分配一个角色层（1～5，视附着的角色而定）。
若是情况2，则分配到角色外层去。

对于情况1，光效也会分为在角色后方、角色前方等情况，这就需要给光效定义一个orderInLayer，以便进行同层排序。

如此才能处理好（从上往下看）

特效a1
角色A
特效a2
特效b1
角色B
特效b2
角色C
全屏特效z

之类的情况。

——以上。